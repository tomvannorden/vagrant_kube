$script = <<-SCRIPT
cat /vagrant/node1.pub >> /home/vagrant/.ssh/authorized_keys
cat /vagrant/node1.pub >> /home/vagrant/.ssh/id_rsa.pub
cat /vagrant/node1.priv >> /home/vagrant/.ssh/id_rsa

cat << 'SSHEOF' > /home/vagrant/.ssh/config
Host *
  StrictHostKeyChecking no
  UserKnownHostsFile=/dev/null
SSHEOF

chown -R vagrant:vagrant /home/vagrant/.ssh/
SCRIPT

Vagrant.configure(2) do |config|
  config.hostmanager.enabled = true
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
  config.vm.box = "centos/7"
  
  config.vm.provider "virtualbox" do |v|
	v.memory = 8192
	v.cpus = 4
  end

  config.vm.define "node1", primary: true do |h|
    h.vm.network "private_network", ip: "192.168.135.100"
    h.vm.provision :shell, :inline => <<'EOF'
if [ ! -f "/home/vagrant/.ssh/id_rsa" ]; then
  ssh-keygen -t rsa -N "" -f /home/vagrant/.ssh/id_rsa
fi

cp /home/vagrant/.ssh/id_rsa.pub /vagrant/node1.pub
cp /home/vagrant/.ssh/id_rsa /vagrant/node1.priv

cat /vagrant/node1.pub >> /home/vagrant/.ssh/authorized_keys

cat << 'SSHEOF' > /home/vagrant/.ssh/config
Host *
  StrictHostKeyChecking no
  UserKnownHostsFile=/dev/null
SSHEOF

chown -R vagrant:vagrant /home/vagrant/.ssh/
EOF
  end

  config.vm.define "node2" do |h|
    h.vm.network "private_network", ip: "192.168.135.101"
    h.vm.provision :shell, inline: $script
  end

  config.vm.define "node3" do |h|
    h.vm.network "private_network", ip: "192.168.135.102"
    h.vm.provision :shell, inline: $script 
  end

end